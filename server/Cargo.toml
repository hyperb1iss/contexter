[package]
name = "contexter"
version = "0.1.0"
edition = "2021"
authors = ["Stefanie Jane <stef@hyperbliss.tech>"]
description = "AI-powered context extraction tool for intelligent codebase analysis and file processing"
readme = "README.md"
homepage = "https://github.com/hyperb1iss/contexter"
repository = "https://github.com/hyperb1iss/contexter"
license = "Apache-2.0"
keywords = ["ai", "context", "codebase", "analysis", "cli", "web"]
categories = ["command-line-utilities", "development-tools", "web-programming"]

[lib]
name = "contexter"
path = "src/lib.rs"

[[bin]]
name = "contexter"
path = "src/main.rs"

[features]
# You can add features here if needed in the future

[dependencies]
glob = "0.3.1"
clap = { version = "4.5.11", features = ["derive"] }
tempfile = "3.10.1"
ignore = "0.4.22"
regex = "1.10.5"
log = "0.4.14"
env_logger = "0.9.0"
thiserror = "1.0"
actix-web = "4.8.0"
actix-cors = "0.7.0"
serde = { version = "1.0.204", features = ["derive"] }
tokio = { version = "1.39.2", features = ["full"] }
structopt = "0.3.26"
dirs = "5.0"
serde_json = "1.0"
rand = "0.8.5"
sha2 = "0.10.8"
base64 = "0.22.1"
hex = "0.4.3"
constant_time_eq = "0.3.0"

[dev-dependencies]
actix-rt = "2.10.0"

[profile.release]
opt-level = 3
lto = true
codegen-units = 1

[lints.rust]
unsafe_code = "forbid"
missing_docs = { level = "allow", priority = 1 }

[lints.clippy]
# Base lint groups
all = { level = "deny", priority = 0 }
style = { level = "warn", priority = 1 }
perf = { level = "deny", priority = 1 }

# Pedantic lints
pedantic = { level = "deny", priority = 10 }

# Documentation allowances
missing_errors_doc = { level = "allow", priority = 20 }
missing_panics_doc = { level = "allow", priority = 20 }
missing_safety_doc = { level = "allow", priority = 20 }

# Code style allowances - These remain allowed for pragmatic reasons
module_name_repetitions = { level = "allow", priority = 21 }
significant_drop_tightening = { level = "allow", priority = 21 }
must_use_candidate = { level = "allow", priority = 21 }

# Numeric casting and conversion warnings
cast_precision_loss = { level = "warn", priority = 22 }
cast_possible_truncation = { level = "warn", priority = 22 }
cast_sign_loss = { level = "warn", priority = 22 }
as_conversions = { level = "warn", priority = 22 }

# Safety-critical denials
out_of_bounds_indexing = { level = "deny", priority = 30 }
enum_glob_use = { level = "deny", priority = 30 }
unwrap_used = { level = "deny", priority = 30 }
undocumented_unsafe_blocks = { level = "deny", priority = 30 }

# Development/debugging lints
dbg_macro = { level = "warn", priority = 31 }
todo = { level = "warn", priority = 31 }
print_stdout = { level = "warn", priority = 31 } # Should use proper logging mechanisms

# Async-specific lints (important for actix-web/tokio codebase)
future_not_send = { level = "warn", priority = 32 }
async_yields_async = { level = "warn", priority = 32 }

# String and collection efficiency 
implicit_clone = { level = "warn", priority = 33 }
inefficient_to_string = { level = "warn", priority = 33 }
string_lit_as_bytes = { level = "warn", priority = 33 }

# Code complexity (helpful for maintainability)
too_many_lines = { level = "warn", priority = 34 }
cognitive_complexity = { level = "warn", priority = 34 }

# Error handling improvements
result_large_err = { level = "warn", priority = 35 }

# Future considerations
#expect_used = { level = "deny", priority = 30 }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
